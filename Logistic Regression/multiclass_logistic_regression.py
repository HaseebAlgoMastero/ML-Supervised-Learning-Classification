# -*- coding: utf-8 -*-
"""Multiclass Logistic regression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xpSlJml0DVfUoZ9WncfmPpYftwnxE16n
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df  = pd.read_csv('Iris.csv')

df.head(5)

df.drop('Id',axis = 'columns')

x = df.iloc[:,0:4].values

x

y = df.iloc[:,-1].values

y

from sklearn.preprocessing import LabelEncoder
lb = LabelEncoder()
y = lb.fit_transform(y)

y

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split( x,y,test_size = 0.2, random_state = 1)

#@title Training Model Simply
from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state = 1)
classifier.fit(x_train,y_train)

y_pred = classifier.predict(x_test)

from sklearn.metrics import ConfusionMatrixDisplay,accuracy_score
ConfusionMatrixDisplay.from_predictions(y_test,y_pred)

accuracy_score(y_test,y_pred)

#@title Multiclass analysis by the One VS All Method or One vs Reset
from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(multi_class='ovr')
classifier.fit(x_train,y_train)

y_pred = classifier.predict(x_test)

from sklearn.metrics import ConfusionMatrixDisplay,accuracy_score
ConfusionMatrixDisplay.from_predictions(y_test,y_pred)

accuracy_score(y_test,y_pred)

#@title Multiclass analysis by the  One vs One Method
from sklearn.linear_model import LogisticRegression
from sklearn.multiclass import OneVsOneClassifier
from sklearn.multiclass import OneVsRestClassifier
classifier = LogisticRegression()
# ovr = OneVsRestClassifier(classifier)
# ovr.fit(x_train,y_train)
ovo = OneVsOneClassifier(classifier)
ovo.fit(x_train,y_train)

y_pred = ovo.predict(x_test)

y_pred

from sklearn.metrics import ConfusionMatrixDisplay,accuracy_score
ConfusionMatrixDisplay.from_predictions(y_test,y_pred)

accuracy_score(y_test,y_pred)