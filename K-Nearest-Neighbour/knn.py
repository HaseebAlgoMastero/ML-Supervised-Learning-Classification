# -*- coding: utf-8 -*-
"""KNN

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14fwAM3eAGqr8nhL2cm6kVsdJApzuzeLa
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

df = pd.read_csv('diabetes.csv')

zero_not_accepted = ['Glucose', 'BloodPressure', 'SkinThickness', 'BMI', 'Insulin']

for column in zero_not_accepted:
   df[column] = df[column].replace(0,np.nan)
   mean = int(df[column].mean(skipna = True))
   df[column] = df[column].replace(np.nan ,mean)

X = df.iloc[:, 0:8]
y = df.iloc[:, 8]
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0, test_size=0.2)

# from sklearn.model_selection import train_test_split
# x_train,x_test,y_train,y_test = train_test_split(x_values,y_values,test_size=0.2,random_state = 0)

# from sklearn.preprocessing import StandardScaler
# sc = StandardScaler()
# sc.fit_transform(X_train)
# sc.transform(X_test)
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

from sklearn.neighbors import KNeighborsClassifier
# classifier= KNeighborsClassifier(n_neighbors=11, p=2,metric='euclidean')
classifier = KNeighborsClassifier(n_neighbors=11, p=2,metric='minkowski')



classifier.fit(X_train,y_train)

y_pred = classifier.predict(X_test)

y_pred

from sklearn.metrics import accuracy_score,f1_score,confusion_matrix
accuracy_score(y_test,y_pred)
cm = confusion_matrix(y_test, y_pred)
print (cm)
print(f1_score(y_test, y_pred))
print(accuracy_score(y_test, y_pred))